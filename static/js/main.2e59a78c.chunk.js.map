{"version":3,"sources":["hooks/useForm.js","components/LoginForm/LoginForm.js","components/index.js","App.js","index.js"],"names":["useForm","callback","validate","useState","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","name","value","handleSubmit","event","preventDefault","setServerErrors","serverErrors","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","LoginForm","classes","a","async","email","axios","post","response","console","log","message","test","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","onSubmit","FormControl","fullWidth","error","TextField","required","id","onChange","e","target","label","autoComplete","autoFocus","FormHelperText","type","CircularProgress","Button","color","Grid","container","item","Link","href","App","fetch","then","res","json","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e59a78c.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nconst useForm = (callback, validate) => {\n\tconst [values, setValues] = useState({});\n\tconst [errors, setErrors] = useState({});\n\tconst [isSubmitting, setIsSubmitting] = useState(false);\n\tconst handleChange = (name, value) => {\n\t\tsetValues(values => (\n\t\t\t{\n\t\t\t\t...values,\n\t\t\t\t[name]: value\n\t\t\t}\n\t\t));\n\t\tsetErrors(errors => (\n\t\t\t{\n\t\t\t\t...errors,\n\t\t\t\t[name]: null\n\t\t\t}\n\t\t));\n\t};\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tsetErrors(validate(values));\n\t\tsetIsSubmitting(true);\n\t};\n\tconst setServerErrors = (serverErrors) => {\n\t\tsetErrors(errors => (\n\t\t\t{\n\t\t\t\t...errors,\n\t\t\t\t...serverErrors\n\t\t\t}\n\t\t));\n\t};\n\tuseEffect(() => {\n\t\tif (Object.keys(errors).length === 0 && isSubmitting) {\n\t\t\tcallback();\n\t\t}\n\t}, [errors]);\n\treturn {\n\t\thandleChange,\n\t\thandleSubmit,\n\t\tsetServerErrors,\n\t\tvalues,\n\t\terrors\n\t};\n};\nexport default useForm;","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport useForm from \"../../hooks/useForm\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from 'axios';\n\n\nconst useStyles = makeStyles(theme => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nconst LoginForm = () => {\n\tconst [isSubmitting, setIsSubmitting] = useState(false);\n\tconst classes = useStyles();\n\n\tconst validate = (values) => {\n\t\tconst emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\t\tconst errors = {};\n\n\t\tif (!values.email) {\n\t\t\terrors.email = 'Required';\n\t\t}\n\t\tif (values.email && !emailRegex.test(values.email)) {\n\t\t\terrors.email = 'Email is not valid';\n\t\t}\n\n\t\treturn errors;\n\t};\n\n\n\tconst submit = async () => {\n\t\tsetIsSubmitting(true);\n\t\tconst {email} = values;\n\t\ttry {\n\t\t\tconst response = await axios.post('https://radiant-taiga-91549.herokuapp.com/users', {email})\n\t\t\tconsole.log(response);\n\n\t\t\tsetIsSubmitting(false);\n\t\t}catch (e) {\n\t\t\tconsole.log(e);\n\t\t\tsetServerErrors({email:e.message});\n\t\t\tsetIsSubmitting(false);\n\t\t}\n\t}\n\n\tconst { handleChange, handleSubmit, values, errors, setServerErrors } = useForm(\n\t\tsubmit,\n\t\tvalidate,\n\t);\n\n\n\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<div className={classes.paper}>\n\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\tSign in\n\t\t\t\t</Typography>\n\t\t\t\t<form className={classes.form} noValidate onSubmit={handleSubmit}>\n\t\t\t\t\t<FormControl fullWidth error={!!errors[\"email\"]}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tonChange={(e) => handleChange(e.target.name, e.target.value)}\n\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\terror={!!errors[\"email\"]}\n\t\t\t\t\t\t\tvalue={values[\"email\"] ? values[\"email\"] : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors[\"email\"] && <FormHelperText>{errors[\"email\"]}</FormHelperText>}\n\t\t\t\t\t</FormControl>\n\t\t\t\t\t<FormControl fullWidth error={!!errors[\"password\"]}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\terror={!!errors[\"password\"]}\n\t\t\t\t\t\t\tonChange={(e) => handleChange(e.target.name, e.target.value)}\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\tvalue={values[\"password\"] ? values[\"password\"] : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors[\"password\"] && <FormHelperText>{errors[\"password\"]}</FormHelperText>}\n\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t{!isSubmitting ? (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<CircularProgress />\n\t\t\t\t\t)}\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link href=\"#\" variant=\"body2\">\n\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t</Container>\n\t);\n}\n\nexport default LoginForm","import LoginForm from \"./LoginForm/LoginForm\";\n\nexport default LoginForm","import React, {useEffect} from 'react';\nimport LoginForm from \"./components\";\n\nconst App = () => {\n\n    useEffect(() => {\n\n        fetch('https://radiant-taiga-91549.herokuapp.com/users')\n            .then((res) => res.json())\n            .then((res) => console.log(res))\n            .catch((e) => console.log(e))\n\n    },[]);\n\n  return (\n    <div className=\"App\">\n      <LoginForm/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}